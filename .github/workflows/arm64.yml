name: Run self-hosted on arm64
on:
  workflow_dispatch:
jobs:
  arm64buildandpush:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build docker images
        run: |
          cd ./sqlinstance
          docker compose up -d

      - name: Tag images
        run: |
          docker tag dbatools/sqlinstance dbatools/sqlinstance:latest-arm64
          docker tag dbatools/sqlinstance2 dbatools/sqlinstance2:latest-arm64

      - name: Push images
        run: |
          docker push dbatools/sqlinstance:latest-arm64
          docker push dbatools/sqlinstance2:latest-arm64

      # push one multiarch image
      - name: Create and push multiarch manifest
        run: |
          docker manifest create dbatools/sqlinstance:latest --amend dbatools/sqlinstance:latest-amd64 --amend dbatools/sqlinstance:latest-arm64
          docker manifest create dbatools/sqlinstance2:latest --amend dbatools/sqlinstance2:latest-amd64 --amend dbatools/sqlinstance2:latest-arm64

      - name: Push manifest
        run: |
          docker manifest push docker.io/dbatools/sqlinstance:latest --purge
          docker manifest push docker.io/dbatools/sqlinstance2:latest --purge

      - name: View manifest
        run: |
          docker manifest inspect docker.io/dbatools/sqlinstance:latest
          docker manifest inspect docker.io/dbatools/sqlinstance2:latest

      - name: Stop newly built containers and remove volumes
        run: |
          cd ./sqlinstance
          docker compose down --volumes

      - name: Cleanup runner
        if: always()
        run: |
          docker kill $(docker ps -q)
          docker rm $(docker ps -a -q)
          docker system prune -a -f
          docker volume prune -f
          docker builder prune -a -f
